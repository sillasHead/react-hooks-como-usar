(this["webpackJsonpreact-hooks"]=this["webpackJsonpreact-hooks"]||[]).push([[0],{66:function(n,e,t){},74:function(n,e,t){"use strict";t.r(e);var o,r,a=t(0),c=t.n(a),i=t(21),s=t.n(i),d=(t(66),t(6)),u=t(14),l=t(96),b=t(20),p=t(25),j=t(95),x=t(1),f=b.a.div(o||(o=Object(u.a)(["\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 30px;\n  background-color: #282c34;\n  color: whitesmoke;\n  border-radius: 5px;\n\n  button {\n    background-color: #1447ad;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    padding: 10px;\n    margin: 10px;\n    cursor: pointer;\n  }\n"])));function h(n){var e=n.open,t=n.setOpen;function o(){var n=Object(a.useState)("#FFFFFF"),e=Object(d.a)(n,2),t=e[0],o=e[1];return Object(a.useEffect)((function(){alert("nova cor gerada -> "+t)}),[t]),Object(a.useEffect)((function(){return alert("componente renderizado com sucesso!! :)"),function(){return alert("mataste este componente :(")}}),[]),Object(x.jsxs)("div",{style:{display:"flex",gap:50,alignItems:"center"},children:[Object(x.jsx)("span",{children:"Mova o cursor do mouse para dentro do quadrado"}),Object(x.jsx)("div",{style:{width:100,height:100,backgroundColor:t,borderRadius:5,cursor:"pointer"}}),Object(x.jsx)("button",{onClick:function(){for(var n="#",e=0;e<6;e++)n+="0123456789ABCDEF"[Math.floor(16*Math.random())];o(n)},children:"nova cor"})]})}return Object(x.jsx)(j.a,{open:e,onClose:function(){return t(!1)},closeAfterTransition:!0,children:Object(x.jsxs)(f,{children:[Object(x.jsx)("h1",{children:"Exemplo"}),Object(x.jsx)(o,{}),Object(x.jsx)("h1",{children:"C\xf3digo"}),Object(x.jsx)(p.a,{height:"400px",width:"820px",path:"src/hooks/Ref/index.jsx",theme:"vs-dark",value:"function Exemplo() {\n    const [cor, setCor] = useState('#FFFFFF')\n\n    // useEffect recebe dois par\xe2metros:\n    // 1. Uma fun\xe7\xe3o que ser\xe1 executada quando o componente for renderizado\n    // 2. Uma lista de depend\xeancias, que ao terem seu estado\n    // alterado, executar\xe1 a fun\xe7\xe3o novamente\n    // retorna uma fun\xe7\xe3o que ser\xe1 executada quando o componente for desmontado\n    useEffect(() => {\n      alert('nova cor gerada -> ' + cor)\n    }, [cor])\n\n    // pode ser usado quantas vezes for necess\xe1rio\n    // at\xe9 mesmo dentro de outros hooks\n    useEffect(() => {\n      alert('componente renderizado com sucesso!! :)')\n      return () => alert(\"mataste este componente :(\")\n    }, [])\n\n    function gerarCor() {\n      const hexadecimais = '0123456789ABCDEF'\n      let cor = '#'\n\n      for (let i = 0; i < 6; i++) {\n        cor += hexadecimais[Math.floor(Math.random() * 16)]\n      }\n\n      setCor(cor)\n    }\n\n    return (\n      <div style={{ display: \"flex\", gap: 50, alignItems: \"center\" }}>\n        <span>Mova o cursor do mouse para dentro do quadrado</span>\n        <div\n          style={{\n            width: 100,\n            height: 100,\n            backgroundColor: cor,\n            borderRadius: 5,\n            cursor: 'pointer'\n          }}\n        />\n        <button onClick={gerarCor}>nova cor</button>\n      </div>\n    )\n  }",options:{readOnly:!0}})]})})}var O,m=b.a.div(r||(r=Object(u.a)(["\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 30px;\n  background-color: #282c34;\n  color: whitesmoke;\n  border-radius: 5px;\n\n  button {\n    background-color: #1447ad;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    padding: 10px;\n    margin: 10px;\n    cursor: pointer;\n  }\n"])));function v(n){var e=n.open,t=n.setOpen;function o(){var n=Object(a.useRef)(),e=Object(a.useRef)();return Object(x.jsxs)("div",{style:{display:"flex",gap:50},children:[Object(x.jsxs)("div",{children:[Object(x.jsx)("label",{htmlFor:"input1",children:"Digite algo"}),Object(x.jsx)("br",{}),Object(x.jsx)("input",{type:"text",id:"input1",ref:n,onChange:function(){e.current.value=n.current.value}})]}),Object(x.jsxs)("div",{children:[Object(x.jsx)("label",{htmlFor:"input2",children:"Replicando texto"}),Object(x.jsx)("br",{}),Object(x.jsx)("input",{type:"text",id:"input2",readOnly:!0,ref:e})]}),Object(x.jsx)("button",{onClick:function(){n.current.disabled=!n.current.disabled},children:"bloquear/desbloquear input"}),Object(x.jsx)("button",{onClick:function(){console.log(n.current)},children:"exibir elemento no log"})]})}return Object(x.jsx)(j.a,{open:e,onClose:function(){return t(!1)},closeAfterTransition:!0,children:Object(x.jsxs)(m,{children:[Object(x.jsx)("h1",{children:"Exemplo"}),Object(x.jsx)(o,{}),Object(x.jsx)("h1",{children:"C\xf3digo"}),Object(x.jsx)(p.a,{width:"850px",height:"500px",path:"src/hooks/Ref/index.jsx",theme:"vs-dark",value:'function Exemplo() {\n    const inputRef1 = useRef()\n    const inputRef2 = useRef()\n\n    function replicarTexto() {\n      inputRef2.current.value = inputRef1.current.value\n      // current \xe9 um atributo do ref que retorna o elemento\n      // value \xe9 um atributo do elemento input\n    }\n\n    function bloquearOuDesbloquear() {\n      inputRef1.current.disabled = !inputRef1.current.disabled\n    }\n\n    return (\n      <div style={{ display: "flex", gap: 50 }}>\n        <div>\n          <label htmlFor="input1">Digite algo</label><br />\n          <input type="text" id="input1" ref={inputRef1} onChange={replicarTexto} />\n        </div>\n\n        <div>\n          <label htmlFor="input2">Replicando texto</label><br />\n          <input type="text" id="input2" readOnly ref={inputRef2} />\n        </div>\n\n        <button onClick={bloquearOuDesbloquear}>bloquear/desbloquear input</button>\n        <button onClick={() => {\n          console.log(inputRef1.current)\n        }}>exibir elemento no log</button>\n      </div>\n    )\n  }',options:{readOnly:!0}})]})})}var g,k=b.a.div(O||(O=Object(u.a)(["\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 30px;\n  background-color: #282c34;\n  color: whitesmoke;\n  border-radius: 5px;\n\n  button {\n    background-color: #1447ad;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    padding: 10px;\n    margin: 10px;\n    cursor: pointer;\n  }\n"])));function C(n){var e=n.open,t=n.setOpen;function o(){var n=Object(a.useState)(0),e=Object(d.a)(n,2),t=e[0],o=e[1];return Object(x.jsxs)("div",{style:{display:"flex",gap:50,alignItems:"center"},children:[Object(x.jsx)("button",{onClick:function(){o(t-1)},children:"decrementar"}),Object(x.jsxs)("span",{children:["Contador: ",Object(x.jsx)("b",{children:t})]}),Object(x.jsx)("button",{onClick:function(){o(t+1)},children:"incremenar"})]})}return Object(x.jsx)(j.a,{open:e,onClose:function(){return t(!1)},closeAfterTransition:!0,children:Object(x.jsxs)(k,{children:[Object(x.jsx)("h1",{children:"Exemplo"}),Object(x.jsx)(o,{}),Object(x.jsx)("h1",{children:"C\xf3digo"}),Object(x.jsx)(p.a,{height:"400px",width:"720px",path:"src/hooks/Ref/index.jsx",theme:"vs-dark",value:'function Exemplo() {\n  const [contador, setContador] = useState(0 /* valor inicial */)\n  // contador \xe9 o objeto que representa o estado\n  // setContador \xe9 a fun\xe7\xe3o que altera o estado\n  \n  function incrementar() {\n    setContador(contador + 1)\n  }\n\n  function decrementar() {\n    setContador(contador - 1)\n  }\n  \n  return (\n    <div style={{ display: "flex", gap: 50, alignItems: "center" }}>\n      <button onClick={decrementar}>decrementar</button>\n      <span>Contador: <b>{contador}</b></span>\n      <button onClick={incrementar}>incremenar</button>\n    </div>\n  )\n}',options:{readOnly:!0}})]})})}var y=b.a.div(g||(g=Object(u.a)(["\n  text-align: center;\n  background-color: #282c34;\n  height: 100vh;\n  width: 100vw;\n"])));var R=function(){var n=Object(a.useState)(!1),e=Object(d.a)(n,2),t=e[0],o=e[1],r=Object(a.useState)(!1),c=Object(d.a)(r,2),i=c[0],s=c[1],u=Object(a.useState)(!1),b=Object(d.a)(u,2),p=b[0],j=b[1];return Object(x.jsxs)(y,{children:[Object(x.jsx)(l.a,{variant:"contained",onClick:function(){return o(!0)},children:"open useRef"}),Object(x.jsx)(l.a,{variant:"contained",onClick:function(){return s(!0)},children:"open useState"}),Object(x.jsx)(l.a,{variant:"contained",onClick:function(){return j(!0)},children:"open useEffect"}),Object(x.jsx)(v,{open:t,setOpen:o}),Object(x.jsx)(C,{open:i,setOpen:s}),Object(x.jsx)(h,{open:p,setOpen:j})]})};s.a.render(Object(x.jsx)(c.a.StrictMode,{children:Object(x.jsx)(R,{})}),document.getElementById("root"))}},[[74,1,2]]]);
//# sourceMappingURL=main.95d069b9.chunk.js.map