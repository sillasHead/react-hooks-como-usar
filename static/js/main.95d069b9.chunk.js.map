{"version":3,"sources":["hooks/Effect/index.jsx","hooks/Ref/index.jsx","hooks/State/index.jsx","App.jsx","index.jsx"],"names":["Container","styled","div","Effect","open","setOpen","Exemplo","useState","cor","setCor","useEffect","alert","style","display","gap","alignItems","width","height","backgroundColor","borderRadius","cursor","onClick","i","Math","floor","random","Modal","onClose","closeAfterTransition","path","theme","value","options","readOnly","Ref","inputRef1","useRef","inputRef2","htmlFor","type","id","ref","onChange","current","disabled","console","log","State","contador","setContador","App","openRef","setOpenRef","openState","setOpenState","openEffect","setOpenEffect","Button","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95d069b9.chunk.js","sourcesContent":["import Editor from '@monaco-editor/react'\r\nimport Modal from '@mui/material/Modal'\r\nimport { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 30px;\r\n  background-color: #282c34;\r\n  color: whitesmoke;\r\n  border-radius: 5px;\r\n\r\n  button {\r\n    background-color: #1447ad;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst editor =\r\n  `function Exemplo() {\r\n    const [cor, setCor] = useState('#FFFFFF')\r\n\r\n    // useEffect recebe dois parâmetros:\r\n    // 1. Uma função que será executada quando o componente for renderizado\r\n    // 2. Uma lista de dependências, que ao terem seu estado\r\n    // alterado, executará a função novamente\r\n    // retorna uma função que será executada quando o componente for desmontado\r\n    useEffect(() => {\r\n      alert('nova cor gerada -> ' + cor)\r\n    }, [cor])\r\n\r\n    // pode ser usado quantas vezes for necessário\r\n    // até mesmo dentro de outros hooks\r\n    useEffect(() => {\r\n      alert('componente renderizado com sucesso!! :)')\r\n      return () => alert(\"mataste este componente :(\")\r\n    }, [])\r\n\r\n    function gerarCor() {\r\n      const hexadecimais = '0123456789ABCDEF'\r\n      let cor = '#'\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        cor += hexadecimais[Math.floor(Math.random() * 16)]\r\n      }\r\n\r\n      setCor(cor)\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", gap: 50, alignItems: \"center\" }}>\r\n        <span>Mova o cursor do mouse para dentro do quadrado</span>\r\n        <div\r\n          style={{\r\n            width: 100,\r\n            height: 100,\r\n            backgroundColor: cor,\r\n            borderRadius: 5,\r\n            cursor: 'pointer'\r\n          }}\r\n        />\r\n        <button onClick={gerarCor}>nova cor</button>\r\n      </div>\r\n    )\r\n  }`\r\n\r\nexport default function Effect({ open, setOpen }) {\r\n  function Exemplo() {\r\n    const [cor, setCor] = useState('#FFFFFF')\r\n\r\n    // useEffect recebe dois parâmetros:\r\n    // 1. Uma função que será executada quando o componente for renderizado\r\n    // 2. Uma lista de dependências, que ao terem seu estado\r\n    // alterado, executará a função novamente\r\n    // retorna uma função que será executada quando o componente for desmontado\r\n    useEffect(() => {\r\n      alert('nova cor gerada -> ' + cor)\r\n    }, [cor])\r\n\r\n    // pode ser usado quantas vezes for necessário\r\n    // até mesmo dentro de outros hooks\r\n    useEffect(() => {\r\n      alert('componente renderizado com sucesso!! :)')\r\n      return () => alert(\"mataste este componente :(\")\r\n    }, [])\r\n\r\n    function gerarCor() {\r\n      const hexadecimais = '0123456789ABCDEF'\r\n      let cor = '#'\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        cor += hexadecimais[Math.floor(Math.random() * 16)]\r\n      }\r\n\r\n      setCor(cor)\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", gap: 50, alignItems: \"center\" }}>\r\n        <span>Mova o cursor do mouse para dentro do quadrado</span>\r\n        <div\r\n          style={{\r\n            width: 100,\r\n            height: 100,\r\n            backgroundColor: cor,\r\n            borderRadius: 5,\r\n            cursor: 'pointer'\r\n          }}\r\n        />\r\n        <button onClick={gerarCor}>nova cor</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      closeAfterTransition\r\n    >\r\n      <Container>\r\n        {/* <h3>\r\n          TODO explicação\r\n        </h3>\r\n\r\n        <hr /> */}\r\n\r\n        <h1>Exemplo</h1>\r\n        <Exemplo />\r\n\r\n        <h1>Código</h1>\r\n        <Editor\r\n          height=\"400px\"\r\n          width=\"820px\"\r\n          path=\"src/hooks/Ref/index.jsx\"\r\n          theme=\"vs-dark\"\r\n          value={editor}\r\n          options={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n      </Container>\r\n    </Modal>\r\n  )\r\n}","import Editor from '@monaco-editor/react'\r\nimport Modal from '@mui/material/Modal'\r\nimport { useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 30px;\r\n  background-color: #282c34;\r\n  color: whitesmoke;\r\n  border-radius: 5px;\r\n\r\n  button {\r\n    background-color: #1447ad;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst editor =\r\n  `function Exemplo() {\r\n    const inputRef1 = useRef()\r\n    const inputRef2 = useRef()\r\n\r\n    function replicarTexto() {\r\n      inputRef2.current.value = inputRef1.current.value\r\n      // current é um atributo do ref que retorna o elemento\r\n      // value é um atributo do elemento input\r\n    }\r\n\r\n    function bloquearOuDesbloquear() {\r\n      inputRef1.current.disabled = !inputRef1.current.disabled\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", gap: 50 }}>\r\n        <div>\r\n          <label htmlFor=\"input1\">Digite algo</label><br />\r\n          <input type=\"text\" id=\"input1\" ref={inputRef1} onChange={replicarTexto} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"input2\">Replicando texto</label><br />\r\n          <input type=\"text\" id=\"input2\" readOnly ref={inputRef2} />\r\n        </div>\r\n\r\n        <button onClick={bloquearOuDesbloquear}>bloquear/desbloquear input</button>\r\n        <button onClick={() => {\r\n          console.log(inputRef1.current)\r\n        }}>exibir elemento no log</button>\r\n      </div>\r\n    )\r\n  }`\r\n\r\nexport default function Ref({ open, setOpen }) {\r\n  function Exemplo() {\r\n    const inputRef1 = useRef()\r\n    const inputRef2 = useRef()\r\n\r\n    function replicarTexto() {\r\n      inputRef2.current.value = inputRef1.current.value\r\n      // current é um atributo do ref que retorna o elemento\r\n      // value é um atributo do elemento input\r\n    }\r\n\r\n    function bloquearOuDesbloquear() {\r\n      inputRef1.current.disabled = !inputRef1.current.disabled\r\n    }\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", gap: 50 }}>\r\n        <div>\r\n          <label htmlFor=\"input1\">Digite algo</label><br />\r\n          <input type=\"text\" id=\"input1\" ref={inputRef1} onChange={replicarTexto} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"input2\">Replicando texto</label><br />\r\n          <input type=\"text\" id=\"input2\" readOnly ref={inputRef2} />\r\n        </div>\r\n\r\n        <button onClick={bloquearOuDesbloquear}>bloquear/desbloquear input</button>\r\n        <button onClick={() => {\r\n          console.log(inputRef1.current)\r\n        }}>exibir elemento no log</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      closeAfterTransition\r\n    >\r\n      <Container>\r\n        {/* <h3>\r\n          TODO explicação\r\n        </h3>\r\n\r\n        <hr /> */}\r\n\r\n        <h1>Exemplo</h1>\r\n        <Exemplo />\r\n\r\n        <h1>Código</h1>\r\n        <Editor\r\n          width=\"850px\"\r\n          height=\"500px\"\r\n          path=\"src/hooks/Ref/index.jsx\"\r\n          theme=\"vs-dark\"\r\n          value={editor}\r\n          options={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n      </Container>\r\n    </Modal>\r\n  )\r\n}","import Editor from '@monaco-editor/react'\r\nimport Modal from '@mui/material/Modal'\r\nimport { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 30px;\r\n  background-color: #282c34;\r\n  color: whitesmoke;\r\n  border-radius: 5px;\r\n\r\n  button {\r\n    background-color: #1447ad;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst editor =\r\n`function Exemplo() {\r\n  const [contador, setContador] = useState(0 /* valor inicial */)\r\n  // contador é o objeto que representa o estado\r\n  // setContador é a função que altera o estado\r\n  \r\n  function incrementar() {\r\n    setContador(contador + 1)\r\n  }\r\n\r\n  function decrementar() {\r\n    setContador(contador - 1)\r\n  }\r\n  \r\n  return (\r\n    <div style={{ display: \"flex\", gap: 50, alignItems: \"center\" }}>\r\n      <button onClick={decrementar}>decrementar</button>\r\n      <span>Contador: <b>{contador}</b></span>\r\n      <button onClick={incrementar}>incremenar</button>\r\n    </div>\r\n  )\r\n}`\r\n\r\nexport default function State({ open, setOpen }) {\r\n  function Exemplo() {\r\n    const [contador, setContador] = useState(0 /* valor inicial */)\r\n    // useState retorna um array com dois elementos:\r\n    // 1º é o objeto que representa o estado\r\n    // 2º é a função que altera o estado, por convenção iniciado com 'set'\r\n\r\n    function incrementar() {\r\n      setContador(contador + 1)\r\n    }\r\n\r\n    function decrementar() {\r\n      setContador(contador - 1)\r\n    }\r\n    \r\n    return (\r\n      <div style={{ display: \"flex\", gap: 50, alignItems: \"center\" }}>\r\n        <button onClick={decrementar}>decrementar</button>\r\n        <span>Contador: <b>{contador}</b></span>\r\n        <button onClick={incrementar}>incremenar</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      closeAfterTransition\r\n    >\r\n      <Container>\r\n        {/* <h3>\r\n          TODO explicação\r\n        </h3>\r\n\r\n        <hr /> */}\r\n\r\n        <h1>Exemplo</h1>\r\n        <Exemplo />\r\n        \r\n        <h1>Código</h1>\r\n        <Editor\r\n          height=\"400px\"\r\n          width=\"720px\"\r\n          path=\"src/hooks/Ref/index.jsx\"\r\n          theme=\"vs-dark\"\r\n          value={editor}\r\n          options={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n      </Container>\r\n    </Modal>\r\n  )\r\n}","import { Button } from '@mui/material'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport Effect from './hooks/Effect'\nimport Ref from './hooks/Ref'\nimport State from './hooks/State'\n\nconst Container = styled.div`\n  text-align: center;\n  background-color: #282c34;\n  height: 100vh;\n  width: 100vw;\n`\n\n\nfunction App() {\n  const [openRef, setOpenRef] = useState(false)\n  const [openState, setOpenState] = useState(false)\n  const [openEffect, setOpenEffect] = useState(false)\n\n  return (\n    <Container>\n      <Button variant=\"contained\" onClick={() => setOpenRef(true)}>\n        open useRef\n      </Button>\n      <Button variant=\"contained\" onClick={() => setOpenState(true)}>\n        open useState\n      </Button>\n      <Button variant=\"contained\" onClick={() => setOpenEffect(true)}>\n        open useEffect\n      </Button>\n      <Ref open={openRef} setOpen={setOpenRef} />\n      <State open={openState} setOpen={setOpenState} />\n      <Effect open={openEffect} setOpen={setOpenEffect} />\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}